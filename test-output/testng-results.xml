<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="28" passed="22" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-01T14:46:34 GST" name="My Testsuite2" finished-at="2022-11-01T14:55:43 GST" duration-ms="548898">
    <groups>
      <group name="SmokeTest">
        <method signature="DashBoardTestCase.checkProfileName()[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f]" name="checkProfileName" class="testCases.DashBoardTestCase"/>
        <method signature="LoginTestcase.verifyLoggedUsers1()[pri:0, instance:testCases.LoginTestcase@242b836]" name="verifyLoggedUsers1" class="testCases.LoginTestcase"/>
      </group> <!-- SmokeTest -->
    </groups>
    <test started-at="2022-11-01T14:46:34 GST" name="ChromeTest1" finished-at="2022-11-01T14:55:43 GST" duration-ms="548898">
      <class name="testCases.MngExpenseTestcase">
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngExpenseTestcase@5a45133e]" started-at="2022-11-01T14:52:12 GST" name="beforemethod" finished-at="2022-11-01T14:52:18 GST" duration-ms="5892" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkCalendar()[pri:0, instance:testCases.MngExpenseTestcase@5a45133e]" started-at="2022-11-01T14:52:18 GST" name="chkCalendar" finished-at="2022-11-01T14:52:18 GST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkCalendar -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngExpenseTestcase@5a45133e]" started-at="2022-11-01T14:52:18 GST" name="aftermethod" finished-at="2022-11-01T14:52:18 GST" duration-ms="186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkCalendar status=SUCCESS method=MngExpenseTestcase.chkCalendar()[pri:0, instance:testCases.MngExpenseTestcase@5a45133e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngExpenseTestcase@5a45133e]" started-at="2022-11-01T14:52:18 GST" name="beforemethod" finished-at="2022-11-01T14:52:24 GST" duration-ms="6029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkFileUpload()[pri:0, instance:testCases.MngExpenseTestcase@5a45133e]" started-at="2022-11-01T14:52:24 GST" name="chkFileUpload" finished-at="2022-11-01T14:52:55 GST" duration-ms="31059" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Displayed text is not as expected expected [ ×
Alert!
Expense Record Updated Successfully] but found [×
Alert!
Expense Record Updated Successfully]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Displayed text is not as expected expected [ ×
Alert!
Expense Record Updated Successfully] but found [×
Alert!
Expense Record Updated Successfully]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at testCases.MngExpenseTestcase.chkFileUpload(MngExpenseTestcase.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkFileUpload -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngExpenseTestcase@5a45133e]" started-at="2022-11-01T14:52:55 GST" name="aftermethod" finished-at="2022-11-01T14:52:55 GST" duration-ms="334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkFileUpload status=FAILURE method=MngExpenseTestcase.chkFileUpload()[pri:0, instance:testCases.MngExpenseTestcase@5a45133e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- testCases.MngExpenseTestcase -->
      <class name="testCases.MngDelvryBoyTestcase">
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a]" started-at="2022-11-01T14:51:39 GST" name="beforemethod" finished-at="2022-11-01T14:51:46 GST" duration-ms="6272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkBgColor()[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a]" started-at="2022-11-01T14:51:46 GST" name="chkBgColor" finished-at="2022-11-01T14:51:51 GST" duration-ms="5102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkBgColor -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a]" started-at="2022-11-01T14:51:51 GST" name="aftermethod" finished-at="2022-11-01T14:51:51 GST" duration-ms="226" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkBgColor status=SUCCESS method=MngDelvryBoyTestcase.chkBgColor()[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a]" started-at="2022-11-01T14:51:51 GST" name="beforemethod" finished-at="2022-11-01T14:51:57 GST" duration-ms="6040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkName()[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a]" started-at="2022-11-01T14:51:57 GST" name="chkName" finished-at="2022-11-01T14:52:03 GST" duration-ms="5414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkName -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a]" started-at="2022-11-01T14:52:03 GST" name="aftermethod" finished-at="2022-11-01T14:52:03 GST" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkName status=SUCCESS method=MngDelvryBoyTestcase.chkName()[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a]" started-at="2022-11-01T14:52:03 GST" name="beforemethod" finished-at="2022-11-01T14:52:09 GST" duration-ms="6777" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkToolTip()[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a]" started-at="2022-11-01T14:52:09 GST" name="chkToolTip" finished-at="2022-11-01T14:52:12 GST" duration-ms="2230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkToolTip -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a]" started-at="2022-11-01T14:52:12 GST" name="aftermethod" finished-at="2022-11-01T14:52:12 GST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkToolTip status=SUCCESS method=MngDelvryBoyTestcase.chkToolTip()[pri:0, instance:testCases.MngDelvryBoyTestcase@1ed6388a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- testCases.MngDelvryBoyTestcase -->
      <class name="testCases.LoginTestcase">
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.LoginTestcase@242b836]" started-at="2022-11-01T14:47:12 GST" name="beforemethod" finished-at="2022-11-01T14:47:18 GST" duration-ms="6185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="verifyCheckBox()[pri:0, instance:testCases.LoginTestcase@242b836]" started-at="2022-11-01T14:47:18 GST" name="verifyCheckBox" finished-at="2022-11-01T14:47:18 GST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckBox -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestcase@242b836]" started-at="2022-11-01T14:47:18 GST" name="aftermethod" finished-at="2022-11-01T14:47:19 GST" duration-ms="195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCheckBox status=SUCCESS method=LoginTestcase.verifyCheckBox()[pri:0, instance:testCases.LoginTestcase@242b836] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.LoginTestcase@242b836]" started-at="2022-11-01T14:47:19 GST" name="beforemethod" finished-at="2022-11-01T14:47:24 GST" duration-ms="5845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="verifyLoggedUsers()[pri:0, instance:testCases.LoginTestcase@242b836]" started-at="2022-11-01T14:47:24 GST" name="verifyLoggedUsers" finished-at="2022-11-01T14:47:27 GST" duration-ms="2102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggedUsers -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestcase@242b836]" started-at="2022-11-01T14:47:27 GST" name="aftermethod" finished-at="2022-11-01T14:47:27 GST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoggedUsers status=SUCCESS method=LoginTestcase.verifyLoggedUsers()[pri:0, instance:testCases.LoginTestcase@242b836] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.LoginTestcase@242b836]" started-at="2022-11-01T14:47:27 GST" name="beforemethod" finished-at="2022-11-01T14:47:45 GST" duration-ms="18722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="verifyLoggedUsers1()[pri:0, instance:testCases.LoginTestcase@242b836]" started-at="2022-11-01T14:47:45 GST" name="verifyLoggedUsers1" finished-at="2022-11-01T14:47:45 GST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggedUsers1 -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.LoginTestcase@242b836]" started-at="2022-11-01T14:47:45 GST" name="aftermethod" finished-at="2022-11-01T14:47:46 GST" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoggedUsers1 status=SUCCESS method=LoginTestcase.verifyLoggedUsers1()[pri:0, instance:testCases.LoginTestcase@242b836] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- testCases.LoginTestcase -->
      <class name="testCases.MngLocationTestcase">
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:47:46 GST" name="beforemethod" finished-at="2022-11-01T14:47:52 GST" duration-ms="6312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkStateselected()[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:47:52 GST" name="chkStateselected" finished-at="2022-11-01T14:50:52 GST" duration-ms="180173" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-0ILCENT', ip: '192.168.100.14', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [316e00a34337369efe51847fab7558b7, clickElement {id=a93854d1-99ca-46ef-a5fc-f81289b6c266}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.119, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\sanal\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61132}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:61132/devtoo..., se:cdpVersion: 106.0.5249.119, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (316e00a34337369efe51847fab7558b7)] -> xpath: //button[@class='btn btn-dark btn-block']]
Session ID: 316e00a34337369efe51847fab7558b7]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-0ILCENT', ip: '192.168.100.14', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [316e00a34337369efe51847fab7558b7, clickElement {id=a93854d1-99ca-46ef-a5fc-f81289b6c266}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.119, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\sanal\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61132}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:61132/devtoo..., se:cdpVersion: 106.0.5249.119, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (316e00a34337369efe51847fab7558b7)] -> xpath: //button[@class='btn btn-dark btn-block']]
Session ID: 316e00a34337369efe51847fab7558b7
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:65)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)
at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:98)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:181)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy18.click(Unknown Source)
at elementRepository.LoginPage.clickSignin(LoginPage.java:66)
at elementRepository.LoginPage.presteps(LoginPage.java:88)
at testCases.MngLocationTestcase.chkStateselected(MngLocationTestcase.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206)
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:59)
... 49 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkStateselected -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:50:52 GST" name="aftermethod" finished-at="2022-11-01T14:51:04 GST" duration-ms="11960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkStateselected status=FAILURE method=MngLocationTestcase.chkStateselected()[pri:0, instance:testCases.MngLocationTestcase@942a29c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:51:04 GST" name="beforemethod" finished-at="2022-11-01T14:51:14 GST" duration-ms="9723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkStatus()[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:51:14 GST" name="chkStatus" finished-at="2022-11-01T14:51:18 GST" duration-ms="4501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkStatus -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:51:18 GST" name="aftermethod" finished-at="2022-11-01T14:51:21 GST" duration-ms="2471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkStatus status=SUCCESS method=MngLocationTestcase.chkStatus()[pri:0, instance:testCases.MngLocationTestcase@942a29c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:51:21 GST" name="beforemethod" finished-at="2022-11-01T14:51:27 GST" duration-ms="5998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="getBgColor()[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:51:27 GST" name="getBgColor" finished-at="2022-11-01T14:51:29 GST" duration-ms="2046" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Displayed text style is not as expected expected [rgba(255, 193, 7, 1)] but found [rgba(40, 167, 69, 1)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Displayed text style is not as expected expected [rgba(255, 193, 7, 1)] but found [rgba(40, 167, 69, 1)]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at testCases.MngLocationTestcase.getBgColor(MngLocationTestcase.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBgColor -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:51:29 GST" name="aftermethod" finished-at="2022-11-01T14:51:29 GST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getBgColor status=FAILURE method=MngLocationTestcase.getBgColor()[pri:0, instance:testCases.MngLocationTestcase@942a29c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:51:29 GST" name="beforemethod" finished-at="2022-11-01T14:51:35 GST" duration-ms="5874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="getDelCharge()[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:51:35 GST" name="getDelCharge" finished-at="2022-11-01T14:51:37 GST" duration-ms="1986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDelCharge -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngLocationTestcase@942a29c]" started-at="2022-11-01T14:51:37 GST" name="aftermethod" finished-at="2022-11-01T14:51:39 GST" duration-ms="2443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDelCharge status=SUCCESS method=MngLocationTestcase.getDelCharge()[pri:0, instance:testCases.MngLocationTestcase@942a29c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- testCases.MngLocationTestcase -->
      <class name="testCases.MngOrdersTestcase">
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:53:24 GST" name="beforemethod" finished-at="2022-11-01T14:53:30 GST" duration-ms="5877" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkElementsStatus(java.lang.String)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:53:30 GST" name="chkElementsStatus" data-provider="data-provider" finished-at="2022-11-01T14:53:46 GST" duration-ms="16337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkElementsStatus -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:53:46 GST" name="aftermethod" finished-at="2022-11-01T14:53:47 GST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkElementsStatus status=SUCCESS method=MngOrdersTestcase.chkElementsStatus(java.lang.String)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:53:47 GST" name="beforemethod" finished-at="2022-11-01T14:53:53 GST" duration-ms="6031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkElementsStatus(java.lang.String)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:53:53 GST" name="chkElementsStatus" data-provider="data-provider" finished-at="2022-11-01T14:54:06 GST" duration-ms="13139" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Paid2]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate option with text: Paid2
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-0ILCENT', ip: '192.168.100.14', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate option with text: Paid2
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-0ILCENT', ip: '192.168.100.14', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:151)
at utilities.GeneralUtilities.selectFuncbyVisibletext(GeneralUtilities.java:64)
at elementRepository.MngOrdersRepo.getSelectedStatus(MngOrdersRepo.java:67)
at testCases.MngOrdersTestcase.chkElementsStatus(MngOrdersTestcase.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkElementsStatus -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:54:06 GST" name="aftermethod" finished-at="2022-11-01T14:54:06 GST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkElementsStatus status=FAILURE method=MngOrdersTestcase.chkElementsStatus(java.lang.String)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:54:06 GST" name="beforemethod" finished-at="2022-11-01T14:54:15 GST" duration-ms="9029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkElementsStatus(java.lang.String)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:54:15 GST" name="chkElementsStatus" data-provider="data-provider" finished-at="2022-11-01T14:54:18 GST" duration-ms="2670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Delivered]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkElementsStatus -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:54:18 GST" name="aftermethod" finished-at="2022-11-01T14:54:18 GST" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkElementsStatus status=SUCCESS method=MngOrdersTestcase.chkElementsStatus(java.lang.String)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:54:18 GST" name="beforemethod" finished-at="2022-11-01T14:54:24 GST" duration-ms="5890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkSrchByPaymentMode()[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:54:24 GST" name="chkSrchByPaymentMode" finished-at="2022-11-01T14:54:28 GST" duration-ms="4092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkSrchByPaymentMode -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngOrdersTestcase@4f80542f]" started-at="2022-11-01T14:54:28 GST" name="aftermethod" finished-at="2022-11-01T14:54:28 GST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkSrchByPaymentMode status=SUCCESS method=MngOrdersTestcase.chkSrchByPaymentMode()[pri:0, instance:testCases.MngOrdersTestcase@4f80542f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- testCases.MngOrdersTestcase -->
      <class name="testCases.PushNotificationTestcase">
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.PushNotificationTestcase@121314f7]" started-at="2022-11-01T14:55:15 GST" name="beforemethod" finished-at="2022-11-01T14:55:21 GST" duration-ms="6535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkBgColor()[pri:0, instance:testCases.PushNotificationTestcase@121314f7]" started-at="2022-11-01T14:55:21 GST" name="chkBgColor" finished-at="2022-11-01T14:55:23 GST" duration-ms="1981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkBgColor -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationTestcase@121314f7]" started-at="2022-11-01T14:55:23 GST" name="aftermethod" finished-at="2022-11-01T14:55:23 GST" duration-ms="129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkBgColor status=SUCCESS method=PushNotificationTestcase.chkBgColor()[pri:0, instance:testCases.PushNotificationTestcase@121314f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.PushNotificationTestcase@121314f7]" started-at="2022-11-01T14:55:23 GST" name="beforemethod" finished-at="2022-11-01T14:55:29 GST" duration-ms="5922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkMsg()[pri:0, instance:testCases.PushNotificationTestcase@121314f7]" started-at="2022-11-01T14:55:29 GST" name="chkMsg" finished-at="2022-11-01T14:55:34 GST" duration-ms="4678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkMsg -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationTestcase@121314f7]" started-at="2022-11-01T14:55:34 GST" name="aftermethod" finished-at="2022-11-01T14:55:34 GST" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkMsg status=SUCCESS method=PushNotificationTestcase.chkMsg()[pri:0, instance:testCases.PushNotificationTestcase@121314f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.PushNotificationTestcase@121314f7]" started-at="2022-11-01T14:55:34 GST" name="beforemethod" finished-at="2022-11-01T14:55:41 GST" duration-ms="6753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkText()[pri:0, instance:testCases.PushNotificationTestcase@121314f7]" started-at="2022-11-01T14:55:41 GST" name="chkText" finished-at="2022-11-01T14:55:43 GST" duration-ms="2023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkText -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.PushNotificationTestcase@121314f7]" started-at="2022-11-01T14:55:43 GST" name="aftermethod" finished-at="2022-11-01T14:55:43 GST" duration-ms="128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkText status=SUCCESS method=PushNotificationTestcase.chkText()[pri:0, instance:testCases.PushNotificationTestcase@121314f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- testCases.PushNotificationTestcase -->
      <class name="testCases.MngOfferCodeTestcase">
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngOfferCodeTestcase@534a5a98]" started-at="2022-11-01T14:52:55 GST" name="beforemethod" finished-at="2022-11-01T14:53:09 GST" duration-ms="13338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkAddOffer()[pri:0, instance:testCases.MngOfferCodeTestcase@534a5a98]" started-at="2022-11-01T14:53:09 GST" name="chkAddOffer" finished-at="2022-11-01T14:53:16 GST" duration-ms="7308" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (334, 955)
  (Session info: chrome=106.0.5249.119)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-0ILCENT', ip: '192.168.100.14', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [896119f6c0e21355e85e969be13feb7c, clickElement {id=1ec28273-f34a-4646-822f-dd1b55ee44d6}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.119, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\sanal\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61406}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:61406/devtoo..., se:cdpVersion: 106.0.5249.119, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (896119f6c0e21355e85e969be13feb7c)] -> xpath: //button[@class='btn btn-danger']]
Session ID: 896119f6c0e21355e85e969be13feb7c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (334, 955)
  (Session info: chrome=106.0.5249.119)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-0ILCENT', ip: '192.168.100.14', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [896119f6c0e21355e85e969be13feb7c, clickElement {id=1ec28273-f34a-4646-822f-dd1b55ee44d6}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.119, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\sanal\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61406}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:61406/devtoo..., se:cdpVersion: 106.0.5249.119, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (896119f6c0e21355e85e969be13feb7c)] -> xpath: //button[@class='btn btn-danger']]
Session ID: 896119f6c0e21355e85e969be13feb7c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy18.click(Unknown Source)
at utilities.GeneralUtilities.getClickElement(GeneralUtilities.java:43)
at elementRepository.MngOfferCodeRepo.addOffer(MngOfferCodeRepo.java:77)
at testCases.MngOfferCodeTestcase.chkAddOffer(MngOfferCodeTestcase.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkAddOffer -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngOfferCodeTestcase@534a5a98]" started-at="2022-11-01T14:53:16 GST" name="aftermethod" finished-at="2022-11-01T14:53:16 GST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkAddOffer status=FAILURE method=MngOfferCodeTestcase.chkAddOffer()[pri:0, instance:testCases.MngOfferCodeTestcase@534a5a98] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MngOfferCodeTestcase@534a5a98]" started-at="2022-11-01T14:53:16 GST" name="beforemethod" finished-at="2022-11-01T14:53:22 GST" duration-ms="6015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkUrlPage()[pri:0, instance:testCases.MngOfferCodeTestcase@534a5a98]" started-at="2022-11-01T14:53:22 GST" name="chkUrlPage" finished-at="2022-11-01T14:53:24 GST" duration-ms="1613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkUrlPage -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MngOfferCodeTestcase@534a5a98]" started-at="2022-11-01T14:53:24 GST" name="aftermethod" finished-at="2022-11-01T14:53:24 GST" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkUrlPage status=SUCCESS method=MngOfferCodeTestcase.chkUrlPage()[pri:0, instance:testCases.MngOfferCodeTestcase@534a5a98] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- testCases.MngOfferCodeTestcase -->
      <class name="testCases.DashBoardTestCase">
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f]" started-at="2022-11-01T14:46:34 GST" name="beforemethod" finished-at="2022-11-01T14:46:49 GST" duration-ms="14460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="checkColorHomeBtn()[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f]" started-at="2022-11-01T14:46:49 GST" name="checkColorHomeBtn" finished-at="2022-11-01T14:46:50 GST" duration-ms="1770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkColorHomeBtn -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f]" started-at="2022-11-01T14:46:50 GST" name="aftermethod" finished-at="2022-11-01T14:46:51 GST" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkColorHomeBtn status=SUCCESS method=DashBoardTestCase.checkColorHomeBtn()[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f]" started-at="2022-11-01T14:46:51 GST" name="beforemethod" finished-at="2022-11-01T14:46:57 GST" duration-ms="6444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="checkEnableBar()[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f]" started-at="2022-11-01T14:46:57 GST" name="checkEnableBar" finished-at="2022-11-01T14:47:01 GST" duration-ms="4236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkEnableBar -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f]" started-at="2022-11-01T14:47:01 GST" name="aftermethod" finished-at="2022-11-01T14:47:01 GST" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkEnableBar status=SUCCESS method=DashBoardTestCase.checkEnableBar()[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f]" started-at="2022-11-01T14:47:01 GST" name="beforemethod" finished-at="2022-11-01T14:47:08 GST" duration-ms="6654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="checkProfileName()[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f]" started-at="2022-11-01T14:47:08 GST" name="checkProfileName" finished-at="2022-11-01T14:47:10 GST" duration-ms="1624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkProfileName -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f]" started-at="2022-11-01T14:47:10 GST" name="aftermethod" finished-at="2022-11-01T14:47:12 GST" duration-ms="2467" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProfileName status=SUCCESS method=DashBoardTestCase.checkProfileName()[pri:0, instance:testCases.DashBoardTestCase@6e0f5f7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- testCases.DashBoardTestCase -->
      <class name="testCases.MobSliderTestcase">
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:54:28 GST" name="beforemethod" finished-at="2022-11-01T14:54:34 GST" duration-ms="6128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkImagePresent()[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:54:34 GST" name="chkImagePresent" finished-at="2022-11-01T14:54:44 GST" duration-ms="10034" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument
  (Session info: chrome=106.0.5249.119)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-0ILCENT', ip: '192.168.100.14', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c6258e3fa5cdbed617a8218f8f14993c, clickElement {id=3bb8e50f-9779-41f1-9a10-e93df9e6eb06}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.119, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\sanal\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61568}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:61568/devtoo..., se:cdpVersion: 106.0.5249.119, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (c6258e3fa5cdbed617a8218f8f14993c)] -> id: main_img]
Session ID: c6258e3fa5cdbed617a8218f8f14993c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument
  (Session info: chrome=106.0.5249.119)
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-0ILCENT', ip: '192.168.100.14', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c6258e3fa5cdbed617a8218f8f14993c, clickElement {id=3bb8e50f-9779-41f1-9a10-e93df9e6eb06}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.119, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\sanal\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:61568}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:61568/devtoo..., se:cdpVersion: 106.0.5249.119, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (c6258e3fa5cdbed617a8218f8f14993c)] -> id: main_img]
Session ID: c6258e3fa5cdbed617a8218f8f14993c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy18.click(Unknown Source)
at utilities.GeneralUtilities.getClickElement(GeneralUtilities.java:43)
at elementRepository.MobSliderRepo.verifyImageUpload(MobSliderRepo.java:62)
at testCases.MobSliderTestcase.chkImagePresent(MobSliderTestcase.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkImagePresent -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:54:44 GST" name="aftermethod" finished-at="2022-11-01T14:54:45 GST" duration-ms="469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkImagePresent status=FAILURE method=MobSliderTestcase.chkImagePresent()[pri:0, instance:testCases.MobSliderTestcase@60bd273d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:54:45 GST" name="beforemethod" finished-at="2022-11-01T14:54:51 GST" duration-ms="6092" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkStatus()[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:54:51 GST" name="chkStatus" finished-at="2022-11-01T14:54:53 GST" duration-ms="2555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkStatus -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:54:53 GST" name="aftermethod" finished-at="2022-11-01T14:54:54 GST" duration-ms="90" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkStatus status=SUCCESS method=MobSliderTestcase.chkStatus()[pri:0, instance:testCases.MobSliderTestcase@60bd273d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:54:54 GST" name="beforemethod" finished-at="2022-11-01T14:55:00 GST" duration-ms="6550" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkTitle()[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:55:00 GST" name="chkTitle" finished-at="2022-11-01T14:55:03 GST" duration-ms="2646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkTitle -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:55:03 GST" name="aftermethod" finished-at="2022-11-01T14:55:03 GST" duration-ms="171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkTitle status=SUCCESS method=MobSliderTestcase.chkTitle()[pri:0, instance:testCases.MobSliderTestcase@60bd273d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.String)[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:55:03 GST" name="beforemethod" finished-at="2022-11-01T14:55:09 GST" duration-ms="5973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="chkbgcolor()[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:55:09 GST" name="chkbgcolor" finished-at="2022-11-01T14:55:15 GST" duration-ms="5646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkbgcolor -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testCases.MobSliderTestcase@60bd273d]" started-at="2022-11-01T14:55:15 GST" name="aftermethod" finished-at="2022-11-01T14:55:15 GST" duration-ms="264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chkbgcolor status=SUCCESS method=MobSliderTestcase.chkbgcolor()[pri:0, instance:testCases.MobSliderTestcase@60bd273d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- testCases.MobSliderTestcase -->
    </test> <!-- ChromeTest1 -->
  </suite> <!-- My Testsuite2 -->
</testng-results>
